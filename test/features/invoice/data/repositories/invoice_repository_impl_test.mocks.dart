// Mocks generated by Mockito 5.3.2 from annotations
// in invoices_tdd/test/features/invoice/data/repositories/invoice_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:invoices_tdd/core/network/network_info.dart' as _i2;
import 'package:invoices_tdd/features/invoice/data/data_sources/invoice_local_data_source.dart'
    as _i6;
import 'package:invoices_tdd/features/invoice/data/data_sources/invoice_remote_data_source.dart'
    as _i4;
import 'package:invoices_tdd/features/invoice/data/data_tansfer_objects/invoice_dto.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [InvoiceRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockInvoiceRemoteDataSource extends _i1.Mock
    implements _i4.InvoiceRemoteDataSource {
  MockInvoiceRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.InvoiceDTO>> getConcreteInvoice(String? invoiceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConcreteInvoice,
          [invoiceId],
        ),
        returnValue: _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
      ) as _i3.Future<List<_i5.InvoiceDTO>>);
  @override
  _i3.Future<List<_i5.InvoiceDTO>> getAllInvoices() => (super.noSuchMethod(
        Invocation.method(
          #getAllInvoices,
          [],
        ),
        returnValue: _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
      ) as _i3.Future<List<_i5.InvoiceDTO>>);
}

/// A class which mocks [InvoiceLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockInvoiceLocalDataSource extends _i1.Mock
    implements _i6.InvoiceLocalDataSource {
  MockInvoiceLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void>? cacheInvoice(List<_i5.InvoiceDTO>? invoiceModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheInvoice,
          [invoiceModel],
        ),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>?);
  @override
  _i3.Future<void>? cacheInvoiceList(List<_i5.InvoiceDTO>? invoiceModelList) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheInvoiceList,
          [invoiceModelList],
        ),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>?);
}

/// A class which mocks [InvoiceRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock
    implements _i4.InvoiceRemoteDataSource {
  @override
  _i3.Future<List<_i5.InvoiceDTO>> getConcreteInvoice(String? invoiceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConcreteInvoice,
          [invoiceId],
        ),
        returnValue: _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
      ) as _i3.Future<List<_i5.InvoiceDTO>>);
  @override
  _i3.Future<List<_i5.InvoiceDTO>> getAllInvoices() => (super.noSuchMethod(
        Invocation.method(
          #getAllInvoices,
          [],
        ),
        returnValue: _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.InvoiceDTO>>.value(<_i5.InvoiceDTO>[]),
      ) as _i3.Future<List<_i5.InvoiceDTO>>);
}

/// A class which mocks [InvoiceLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock
    implements _i6.InvoiceLocalDataSource {
  @override
  _i3.Future<void>? cacheInvoice(List<_i5.InvoiceDTO>? invoiceModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheInvoice,
          [invoiceModel],
        ),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>?);
  @override
  _i3.Future<void>? cacheInvoiceList(List<_i5.InvoiceDTO>? invoiceModelList) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheInvoiceList,
          [invoiceModelList],
        ),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>?);
}
